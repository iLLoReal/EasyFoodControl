[{"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Reducer\\Reducer.constants.jsx":"2","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Reducer\\Reducer.jsx":"3","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Display\\AddMeal.jsx":"4","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Navigation\\Nav.jsx":"5","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\App.js":"6","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Home.jsx":"7","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Auth\\Login.js":"8","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Auth\\Register.js":"9","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Profile\\Profile.jsx":"10","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Recipes.jsx":"11","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\FoodScheduler.jsx":"12","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\Day.jsx":"13","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\Objectives.jsx":"14","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Provider\\Store.jsx":"15","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\ObjectivesScheduler.jsx":"16"},{"size":589,"mtime":1612780259311,"results":"17","hashOfConfig":"18"},{"size":358,"mtime":1614311028612,"results":"19","hashOfConfig":"18"},{"size":1220,"mtime":1614402671249,"results":"20","hashOfConfig":"18"},{"size":253,"mtime":1612779786838,"results":"21","hashOfConfig":"18"},{"size":2082,"mtime":1614226515343,"results":"22","hashOfConfig":"18"},{"size":213,"mtime":1613408253970,"results":"23","hashOfConfig":"18"},{"size":734,"mtime":1614137539838,"results":"24","hashOfConfig":"18"},{"size":1807,"mtime":1613427886254,"results":"25","hashOfConfig":"18"},{"size":1497,"mtime":1613427895799,"results":"26","hashOfConfig":"18"},{"size":355,"mtime":1613000866120,"results":"27","hashOfConfig":"18"},{"size":12050,"mtime":1614455896911,"results":"28","hashOfConfig":"18"},{"size":3337,"mtime":1614236112823,"results":"29","hashOfConfig":"18"},{"size":7793,"mtime":1614220363626,"results":"30","hashOfConfig":"18"},{"size":8952,"mtime":1614318998205,"results":"31","hashOfConfig":"18"},{"size":761,"mtime":1614402638301,"results":"32","hashOfConfig":"18"},{"size":6349,"mtime":1614401938185,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1qkesq7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\index.js",[],["75","76"],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Reducer\\Reducer.constants.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Reducer\\Reducer.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Display\\AddMeal.jsx",[],["77","78"],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Navigation\\Nav.jsx",["79"],"import { useContext, useEffect } from 'react';\r\nimport { Context } from '../State/Provider/Store'\r\nimport { NavLink, Switch,  Route, useHistory } from 'react-router-dom';\r\nimport * as actions from '../State/Reducer/Reducer.constants';\r\n\r\nimport AddMeal from '../Display/AddMeal';\r\nimport Profile from '../Profile/Profile';\r\nimport Recipe from '../Recipes';\r\nimport Login from '../Auth/Login';\r\nimport Register from '../Auth/Register';\r\nimport ObjectivesScheduler from '../Calendar/ObjectivesScheduler';\r\n\r\n\r\nconst Nav = () => {\r\n  const [state, dispatch] = useContext(Context);\r\n  const { auth } = state;\r\n\r\n  let history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    dispatch({type: actions.LOGOUT, payload: []});\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return auth.token ? (\r\n    <div>\r\n    <nav>\r\n      <ul>\r\n        <li><NavLink to={'/AddMeal'}>Add Meal</NavLink></li>\r\n        <li><NavLink to={'/Profile'}>Profile</NavLink></li>\r\n        <li><NavLink to={'/CreateRecipe'}>Create a recipe</NavLink></li>\r\n        <li><NavLink to={'/Objectives'}>Setup Objectives</NavLink></li>\r\n        <li><NavLink to={'/Login'} onClick={handleLogout}>Logout</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n    <button onClick={handleLogout}>LOGOUT</button>\r\n    <Switch>\r\n      <Route path='/AddMeal' exact component={AddMeal}/>\r\n      <Route path='/Profile' exact component={Profile}/>\r\n      <Route path='/CreateRecipe' exact component={Recipe}/>\r\n      <Route path='/Objectives' exact component={ObjectivesScheduler}/>\r\n      <Route path='/Logout' exact component={Login}/>\r\n    </Switch>\r\n   </div>\r\n  ) : (\r\n    <div>\r\n    <nav>\r\n      <ul>\r\n        <li><NavLink to={'/Login'}>Login</NavLink></li>\r\n        <li><NavLink to={'/createRecipe'}>Create recipe</NavLink></li>\r\n      </ul>\r\n    </nav>\r\n    <Switch>\r\n      <Route path='/' exact component={Login}/>\r\n      <Route path='/Login' exact component={Login}/>\r\n      <Route path='/Register' exact component={Register}/>\r\n      <Route path='/createRecipe' exact component={Recipe}/>\r\n    </Switch>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Nav;","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Home.jsx",["80","81","82"],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Auth\\Login.js",["83","84","85"],"import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Context } from '../State/Provider/Store'\r\nimport * as actions from '../State/Reducer/Reducer.constants';\r\nimport { AsyncStorage } from 'AsyncStorage';\r\n\r\nconst Login = () => {\r\n   const [state, dispatch] = useContext(Context);\r\n   const [password, setPassword] = useState('');\r\n   const [username, setUsername] = useState('');\r\n\r\n   let history = useHistory();\r\n\r\n   const handleLogin = () => {\r\n      const auth = {username: username, password: password, token: 'yes'};\r\n      dispatch({type: actions.LOGIN, payload: auth});\r\n      history.push(\"/\");\r\n   };\r\n\r\n   const handlePassword = (e) => {\r\n      setPassword(e.target.value.toString());\r\n    };\r\n\r\n    const handleUsername = (e) => {\r\n      setUsername(e.target.value.toString());\r\n    };\r\n\r\n   const redirectToRegister = () => {\r\n      history.push('/register');\r\n   };\r\n\r\n   const createRecipe = () => {\r\n      history.push('/createRecipe');\r\n   };\r\n\r\n   return (\r\n   <div style={{height: '100%', width: '100%', textAlign: 'center'}}>\r\n      <h2>Please concider login in to fully benefit from this application !</h2>\r\n      <form style={{textAlign: 'left'}}>\r\n         <label>Username : </label>\r\n         <div>\r\n            <input type='text' placeholder='User name' onChange={handleUsername}/>\r\n         </div>\r\n         <label>Password : </label>\r\n         <div>\r\n            <input type='password' placeholder='Password' onChange={handlePassword}/>\r\n         </div>\r\n      </form>\r\n      <button style={{width: '100%'}} onClick={handleLogin}>\r\n         Login\r\n      </button>\r\n      <button style={{textAlign: 'center', width: '100%'}} onClick={redirectToRegister}>New ? register</button>\r\n   </div>\r\n  )\r\n};\r\n\r\nexport default Login;","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Auth\\Register.js",["86"],"import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Context } from '../State/Provider/Store';\r\nimport * as actions from '../State/Reducer/Reducer.constants';\r\n\r\nconst Register = () => {\r\n  const [state, dispatch] = useContext(Context);\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  let history = useHistory();\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value.toString());\r\n  };\r\n\r\n  const handleUsername = (e) => {\r\n    setUsername(e.target.value.toString());\r\n  };\r\n\r\n  const confirm = () => {\r\n    if (!username || !password)\r\n      return;\r\n    const auth = {username: username, password: password, token: 'yes'};\r\n    //Call register with axios\r\n    //If user exists return error (catch(e) => `user ${username} already exists)\r\n    //Get Token and log user in\r\n    dispatch({type: actions.REGISTER, payload: auth})\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label>Username : </label>\r\n        <div style={{textAlign: 'right'}}>\r\n          <input type='username' placeholder='User name' onChange={handleUsername}/>\r\n        </div>\r\n        <label>Password : </label>\r\n        <div style={{textAlign: 'right'}}>\r\n          <input type='password' placeholder='Password' onChange={handlePassword}/>\r\n        </div>\r\n      </form>\r\n      <button onClick={confirm}>confirm</button>\r\n   </div>\r\n  )\r\n};\r\n\r\nexport default Register;","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Profile\\Profile.jsx",["87"],"import React, { useContext } from 'react';\r\nimport { Context } from '../State/Provider/Store';\r\n\r\nconst Profile = () => {\r\n  const [state, dispatch] = useContext(Context);\r\n  const { auth } = state; \r\n\r\n   return (\r\n   <div>\r\n       <div>Username: {auth.username}</div>\r\n       <div>Token: {auth.token}</div>\r\n   </div>\r\n  )\r\n};\r\n\r\nexport default Profile;","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Recipes.jsx",["88"],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\FoodScheduler.jsx",["89","90"],"import React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css'\r\nimport './Day.css';\r\nimport { Context } from '../State/Provider/Store';\r\nimport * as actions from '../State/Reducer/Reducer.constants'\r\n\r\n\r\n\r\nconst FoodSchedule = () => {\r\n  const [state, dispatch] = useContext(Context);\r\n  const [display, setDisplay] = useState(false);\r\n  const [selectedDay, setSelectedDay] = useState({display: false, day: 'none'})\r\n\r\n    useEffect(() => {\r\n    //get recipes from axios to AsyncLocal \r\n    });\r\n\r\n    const isInRange = (date) => {\r\n      const curDate = date.getTime();\r\n      const from = state.selectedDate?.startingDate?.getTime();\r\n      const to = state.selectedDate?.endingDate?.getTime();\r\n      return (curDate >= from && curDate <= to);\r\n    }\r\n\r\n  const DisplayRecipes = (gDate) => {\r\n    //console.log(state.selectedDay.day)\r\n    let recipes = '';\r\n    let calories = 0;\r\n    console.log(gDate);\r\n    for (let mealsIndex = 0; mealsIndex < state.meals.length; mealsIndex++) {\r\n      if (state.meals[mealsIndex].day.toString() === gDate.gDate.toString()) {\r\n        for (let recipesIndex = 0; recipesIndex < state.meals[mealsIndex].recipes.length; recipesIndex++) {\r\n          for (let ingredsIndex = 0; ingredsIndex < state.meals[mealsIndex].recipes[recipesIndex].ingredients.length; ingredsIndex++) {\r\n              calories += parseInt(state.meals[mealsIndex].recipes[recipesIndex].ingredients[ingredsIndex].calorie, 10);\r\n          }\r\n        }\r\n        recipes = state.meals[mealsIndex].recipes.map((recipe, id) => <li key={id}>{`${recipe.generalInformation.title}`}</li>);\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        {calories}{isInRange(gDate.gDate) ? `/${state.objectives.calories}` : null}\r\n        {recipes}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\n  const Example = ({date, view}) => {\r\n    const handleButtonClick = () => {\r\n        console.log('add meal');\r\n        setDisplay(true);\r\n        const selectedDayConst = {displayDay: display, day: date};\r\n        setSelectedDay({...selectedDayConst})\r\n        console.log(`now we have ${selectedDay.day}`);\r\n        dispatch({type: actions.DISPLAY_DAY, payload: selectedDayConst});\r\n    }\r\n\r\n    //state.recipes?.map((recipe) => console.log(`ici ${JSON.stringify(recipe)}`))\r\n\r\n\r\n/*    if (state.recipes.length) {\r\n      state.recipes.map((recipe) => console.log(recipe.generalInformation.title));\r\n    }*/\r\n\r\n    const dateToString = date.toString();\r\n    //console.log(`FFS : ${dateToString}`);\r\n    return (\r\n      <div onClick={handleButtonClick}>\r\n        <br/>\r\n        {dateToString === state.selectedDay.day.toString() && state.selectedDay.displayDay ? 'Create or choose recipe' : 'add'}  \r\n        <DisplayRecipes gDate={date}/>\r\n      </div>\r\n      );\r\n  }\r\n  \r\n  const HandleClickDay = (value, event) => {\r\n    console.log('Hello');\r\n    console.log(`This is the day : ${value}`);\r\n    dispatch({ type: 'ADD_RECIPE', payload: state.recipes });\r\n    dispatch({ type: 'ADD_MEAL', payload: state.recipes });\r\n  };\r\n\r\n  return (\r\n    <div style={{margin: 'auto'}}>\r\n      <div>\r\n        test\r\n      </div>\r\n      <Calendar onClickDay={Example.handleButtonClick} tileContent={Example} tileClassName='toto' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodSchedule;","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\Day.jsx",["91","92"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Recipe from '../Recipes';\r\nimport { Context } from '../State/Provider/Store';\r\nimport * as actions from '../State/Reducer/Reducer.constants';\r\n\r\nexport const weekday = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\"\r\n];\r\n\r\nexport const month = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\"\r\n];\r\n\r\nconst Day = () => {\r\n  const [state, dispatch] = useContext(Context)\r\n  const [displayCreateRecipe, setDisplayCreateRecipe] = useState(false);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n  const meal = { day: state.selectedDay.day, id: 0, recipes: []};\r\n  const [recipeList, setRecipeList] = useState([]);\r\n  const [selectCookingMethod, setSelectCookingMethod] = useState('None');\r\n  let firstMealOfTheDay = 0;\r\n\r\n  useEffect(() => {\r\n    console.log(`useEffect Day : ${state.selectedDay.day}, found ${state.meals.length} meals`);\r\n    let noMeals = true;\r\n    if (state.meals.length) {\r\n      for (let i = 0; i < state.meals.length; i++) {\r\n        if (state.meals[i].day.toString() === state.selectedDay.day.toString()) {\r\n          setRecipeList([...state.meals[i].recipes]);\r\n          if (noMeals)\r\n            firstMealOfTheDay = i;\r\n          noMeals = false;\r\n        }\r\n        else\r\n          console.log(`state.meals[i].day(${state.meals[i].day}) != state.selectedDay.day (${state.selectedDay.day})`);\r\n      }\r\n    }\r\n    if (noMeals) {\r\n      setRecipeList([]);\r\n    }\r\n  }, [state.meals, state.selectedDay.day]);\r\n\r\n  const styles = {\r\n    button: {\r\n      display: 'block',\r\n      margin: '1vw auto'\r\n    },\r\n    deleteButton: {\r\n      color: 'red',\r\n      marginLeft: '10px',\r\n      borderRadius: '100%'\r\n    },\r\n    submitButton: {\r\n      borderRadius: '10%',\r\n      borderStyle: 'solid',\r\n      borderColor: 'cyan',\r\n      backgroundColor: 'cyan',\r\n      width: '100%',\r\n      height: 'auto',\r\n      marginBottom: 0\r\n    },\r\n    select: {\r\n      display: 'inline-block',\r\n      margin: '0 auto'\r\n    },\r\n    container: {\r\n      display: 'block',\r\n      textAlign: 'center',\r\n    }\r\n  };\r\n\r\n  const Header = () => {\r\n    return (\r\n      <div style={{display: 'block', border: '1px solid black'}}>\r\n        <div style={{display: 'block', border: '1px solid black'}}>\r\n          <h1>\r\n            {`${weekday[state.selectedDay.day.getDay()]} \r\n            ${month[state.selectedDay.day.getMonth()]}\r\n            ${state.selectedDay.day.getDate()}`}\r\n         </h1>\r\n       </div>\r\n        <div style={{float: 'right', width: '50%'}}>\r\n          {displayCreateRecipe ? <Recipe /> : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleSetSelectedRecipe = (e) => {\r\n//    const recipe = JSON.parse(e);\r\n    if (e.target.value === 'None')\r\n      return;\r\n    for (let i = 0; i < state.recipes.length; i++)\r\n    {\r\n      if (state.recipes[i].generalInformation.id.toString() === e.target.value) { // Remplacer par une ID\r\n        setSelectedRecipe(state.recipes[i]); //gaffe a la copy en profondeur ou non\r\n        break;\r\n      }\r\n    }\r\n//    console.log(`changed for ${selectedRecipe.generalInformation.title}`);\r\n  };\r\n\r\n  const SelectRecipe = () => {\r\n    return state.recipes.length ? (\r\n      <div>\r\n        <div>\r\n          <span>Select Cooking Method </span>\r\n          <select name=\"cooking methods\" onChange={(e) => setSelectCookingMethod(e.target.value)} value={selectedRecipe?.generalInformation.cookingMethod}>\r\n            <option value=\"None\">None</option>\r\n            <option value=\"Oven\">Oven</option>\r\n            <option value=\"Microwave\">Microwave</option>\r\n            <option value=\"Steam\">Steam cooking</option>\r\n            <option value=\"Pan\">Pan cooking</option>\r\n          </select>\r\n        </div>\r\n        <span>Select recipe </span>\r\n         <select style={styles.select} name=\"Select recipe\" onChange={handleSetSelectedRecipe}>\r\n           <option key={0} value='None'>None</option>\r\n          {state.recipes ?\r\n            state.recipes.filter(recipe => recipe.generalInformation.cookingMethod === selectCookingMethod).map((recipe, id) => {\r\n              return (\r\n                <option key={id + 1} value={recipe.generalInformation.id}>\r\n                  {recipe.generalInformation.id}: {recipe.generalInformation.title}\r\n                </option>\r\n                )\r\n            }) : <option value={'empty'}>No recipe</option>}\r\n          </select>\r\n      </div>\r\n    ) : null;\r\n  }\r\n\r\n  const CreateRecipe = () => {\r\n    return (\r\n    <div>\r\n      <button style={styles.button} onClick={() => setDisplayCreateRecipe(!displayCreateRecipe)}>\r\n        {!displayCreateRecipe === true ? 'Create recipe' : 'Stop creating recipe'}\r\n      </button>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  const DefaultDisplay = () => {\r\n    return (\r\n      <div>\r\n        Select a day to start adding meals\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const Container = ({children}) => {\r\n    return (\r\n      <div style={styles.container}>\r\n        {children}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const handleAddRecipe = () => {\r\n    if (selectedRecipe) {\r\n        setRecipeList([...recipeList, selectedRecipe]);\r\n      }\r\n  }\r\n\r\n  const handleRemoveRecipe = (id) => {\r\n    //console.log(`removing element ${recipeList[id].generalInformation.title} corresponding to number ${id}`);\r\n    if (id > -1)\r\n      recipeList.splice(id, 1);\r\n    //recipeList.map((recipe, id) => console.log(`recipe ${id} : ${recipe.generalInformation.title} `));\r\n    setRecipeList([...recipeList]);\r\n  }\r\n\r\n  const AddRecipe = () => {\r\n    return selectedRecipe ? (\r\n      <div style={{width: '100%'}}>\r\n        <button onClick={handleAddRecipe}>ADD RECIPE</button>\r\n      </div>\r\n    ) : <span>No recipe to display</span>;\r\n  };\r\n\r\n  const getFirstMealOfTheDay = () => {\r\n    let noMeals = true;\r\n    let firstMealOfTheDay = -1;\r\n    if (state.meals.length) {\r\n      for (let i = 0; i < state.meals.length; i++) {\r\n        if (state.meals[i].day.toString() === state.selectedDay.day.toString()) {\r\n          if (noMeals)\r\n            firstMealOfTheDay = i;\r\n          noMeals = false;\r\n        }\r\n        else\r\n          console.log(`state.meals[i].day(${state.meals[i].day}) != state.selectedDay.day (${state.selectedDay.day})`);\r\n      }\r\n    }\r\n    return firstMealOfTheDay;\r\n  }\r\n\r\n  const addMeal = () => {\r\n    recipeList.map((recipe) => meal.recipes.push(recipe));\r\n    const newMeals = state.meals.map(meal => meal);\r\n    meal.id = getFirstMealOfTheDay();\r\n    if (meal.id === -1) {\r\n      console.log(`getFirstMealOfTheDay failed`);\r\n      meal.id = state.meals.length + 1;\r\n    }\r\n    console.log(`First of the day : ${meal.id}`);\r\n      newMeals.splice(meal.id, 1);\r\n    dispatch({type: actions.ADD_MEAL, payload: [...newMeals, meal]});\r\n    const selectedDay = {\r\n      displayDay: false,\r\n      day: state.selectedDay.day,\r\n    };\r\n    dispatch({type: actions.DISPLAY_DAY, payload: selectedDay});\r\n    console.log('Added meal to scheduler');\r\n  };\r\n\r\n  const Validate = () => {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {recipeList ? recipeList.map((recipe, id) =>\r\n          <li key={id}>{recipe.generalInformation.title}\r\n            <button style={styles.deleteButton} onClick={() => handleRemoveRecipe(id)}>X</button>\r\n          </li>) : null}\r\n        </ul>\r\n        <button style={styles.submitButton} onClick={addMeal}>Validate Meal</button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return state.selectedDay.displayDay ? (\r\n    <Container>\r\n      <Header />\r\n      <SelectRecipe />\r\n      <CreateRecipe />\r\n      <AddRecipe />\r\n      <Validate />\r\n    </Container>\r\n  ) : <DefaultDisplay />;\r\n};\r\n\r\nexport default Day;;","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\Objectives.jsx",["93","94"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { Context } from '../State/Provider/Store';\r\nimport { DisplayInput } from '../Recipes';\r\n\r\nimport {weekday, month} from './Day';\r\nimport * as actions from '../State/Reducer/Reducer.constants';\r\n\r\nexport const isNum = (val) => (/^\\d+$/.test(val));\r\n\r\nconst Objectives = () => {\r\n  const objectivesInitialState = {\r\n    calories: 2800,\r\n    weight: 80,\r\n    startingDate: null,\r\n    endingDate: null\r\n  }\r\n  const measurementsInitialState = {\r\n    weight: 80,\r\n    height: 180,\r\n    age: 30,\r\n  }\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n  const [objectives, setObjectives] = useState(objectivesInitialState);\r\n  const [measurements, setMeasurements] = useState(measurementsInitialState);\r\n  const [activity, setActivity] = useState('Sedentary');\r\n  const [gender, setGender] = useState('Male');\r\n\r\n  useEffect(() => {\r\n    setObjectives({...state.objectives});\r\n    setMeasurements({...state.measurements});\r\n  },[state.objectives, state.measurements])\r\n\r\n\r\n  const handleDispatchMeasurements = () => {\r\n  }\r\n  const handleDispatchObjectives = () => {\r\n    if (!objectives.calories || !isNum(objectives.calories)) {\r\n      setObjectives({...objectives, calories: GetCalories('Oxford')})\r\n    }\r\n\r\n    if (!objectives.weight || !isNum(objectives.weight)) {\r\n      setObjectives({...objectives, weight: measurements.weight ? measurements.weight : 80})\r\n    }\r\n    dispatch({type: actions.SET_MEASUREMENTS, payload: {...measurements}});\r\n\r\n   // console.log(objectives);\r\n   dispatch({type: actions.SET_OBJECTIVES, payload: {...objectives}});\r\n  };\r\n\r\n  const handleSetActivity = (e) => {\r\n    setActivity(e.target.value);\r\n  }\r\n\r\n  const handleSetGender = (e) => {\r\n    setGender(e.target.value);\r\n  }\r\n\r\n  const GetCalories = (Method) => {\r\n    let sportFactor = 1.2;\r\n    const genderFactor = {\r\n      weightFactor: gender === 'Male' ? 13.707 : 9.740,\r\n      heightFactor: gender === 'Male' ? 492.3 : 172.9,\r\n      ageFactor: gender === 'Male' ? 6.673 : 4.737,\r\n      added: gender === 'Male' ? 77.607 : 667.051\r\n    };\r\n\r\n    switch (activity) {\r\n      case 'Sedentary':\r\n        sportFactor = 1.2;\r\n        break;\r\n      case 'Low activity':\r\n        sportFactor = 1.375;\r\n        break;\r\n      case 'Medium activity':\r\n        sportFactor = 1.55;\r\n        break;\r\n      case 'Intense activity':\r\n        sportFactor = 1.725;\r\n        break;\r\n      default:\r\n        sportFactor = 1.2;\r\n        break;\r\n    }\r\n    const OxfordCalories = (14.2 * measurements.weight + 593) * sportFactor;\r\n    const BenedictAndHarrisCalories = ((genderFactor.weightFactor * measurements.weight)\r\n       + (genderFactor.heightFactor * (measurements.height / 100))\r\n       - (genderFactor.ageFactor * measurements.age)\r\n       + (genderFactor.added)\r\n       ) * sportFactor;\r\n\r\n       if (Method === 'Oxford')\r\n      return OxfordCalories;\r\n    return BenedictAndHarrisCalories;\r\n  }\r\n\r\n  const handleSelectStartingDate = () => {\r\n    dispatch({type: actions.SET_RANGE, payload: {...state.selectedDate, stage: 'start'}})\r\n  };\r\n\r\n  const handleSelectEndingDate = () => {\r\n    dispatch({type: actions.SET_RANGE, payload: {...state.selectedDate, stage: 'end'}})\r\n    console.log(state.selectedDate);\r\n  };\r\n  \r\n  const handleSelectDateAuto = () => {\r\n    const newSelectedDate = {\r\n      stage: 'finished',\r\n      startingDate: new Date(),\r\n      endingDate: new Date()\r\n    };\r\n    if (state.selectedDate?.startingDate?.getTime()) {\r\n      newSelectedDate.startingDate = new Date(state.selectedDate.startingDate);\r\n      console.log('ici' + JSON.stringify(newSelectedDate));\r\n    }\r\n\r\n    const fullYear = newSelectedDate?.startingDate?.getFullYear();\r\n    const months = newSelectedDate?.startingDate?.getMonth() + ((measurements.weight - objectives.weight) / 2);\r\n    const days = newSelectedDate?.startingDate?.getDate() + ((measurements.weight - objectives.weight) % 2 ? 15 : 0);\r\n\r\n    console.log(measurements.weight);\r\n    console.log(objectives.weight);    \r\n    console.log(fullYear);\r\n    console.log(months);\r\n    console.log(days);\r\n    newSelectedDate.endingDate = new Date(fullYear, months, days);\r\n    console.log(`On devrait avoir la date ${JSON.stringify(newSelectedDate)}`);\r\n    dispatch({type: actions.SET_RANGE, payload: {...newSelectedDate}});\r\n  }\r\n\r\n  const handleConfirmDate = () => {\r\n    setObjectives({...objectives, startingDate: state.selectedDate.startingDate, endingDate: state.selectedDate.endingDate});\r\n  }\r\n\r\n  const handleCalorieObjective = (e) => {\r\n    if (isNum(e.target.value))\r\n      setObjectives({...objectives, calories: e.target.value})\r\n    else if (e.target.value === '')\r\n      setObjectives({...objectives, calories: GetCalories('Oxford')});\r\n  };\r\n\r\n  const handleWeightObjective = (e) => {\r\n    if (isNum(e.target.value))\r\n      setObjectives({...objectives, weight: e.target.value});\r\n    else\r\n      setObjectives({...objectives, weight: measurements?.weight ? measurements.weight : measurementsInitialState.calories});\r\n  };\r\n\r\n  const handleMeasurementsAge = (e) => {\r\n    setMeasurements({...measurements, age: (isNum(e.target.value) ? e.target.value : 30)});\r\n  };\r\n  const handleMeasurementsHeight = (e) => {\r\n    setMeasurements({...measurements, height: (isNum(e.target.value) ? e.target.value : 180)});\r\n  };\r\n  const handleMeasurementsWeight = (e) => {\r\n    setMeasurements({...measurements, weight: isNum(e.target.value) ? e.target.value : 80});\r\n  };\r\n\r\n  return (\r\n    <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n      <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n        <h4>Type in current measures</h4>\r\n        <form style={{textAlign: 'right'}}>\r\n          <label>\r\n            weight :\r\n            <input type=\"text\" placeholder={measurements.weight} onChange={handleMeasurementsWeight}/>\r\n            <br/>\r\n          </label>\r\n          <label>\r\n            height :\r\n            <input type=\"text\" placeholder={measurements.height} onChange={handleMeasurementsHeight}/>\r\n            <br/>\r\n          </label>\r\n          <label>\r\n            age :\r\n            <input type=\"text\" placeholder={measurements.age} onChange={handleMeasurementsAge}/>\r\n            <br/>\r\n          </label>\r\n          <div style={{textAlign: 'left'}}>\r\n          Gender :\r\n          <select onChange={handleSetGender} selected={'Male'}>\r\n            <option value='Male'>Male</option>\r\n            <option value='Female'>Female</option>\r\n          </select>\r\n          </div>\r\n          <div style={{textAlign: 'left'}}>\r\n            sports :\r\n          <select onChange={handleSetActivity} selected={'Sedentary'}>\r\n            <option value={'Sedentary'}>Sedentary</option>\r\n            <option value={'Low activity'}>Low activity</option>\r\n            <option value={'Medium activity'}>Medium activity</option>\r\n            <option value={'Intense activity'}>Intense activity</option>\r\n          </select>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <h3>Setup your goals !</h3>\r\n      <h4>Select a date range</h4>\r\n          Click on Start then click on a day of the calendar, then repeat with End to choose an ending date\r\n          <div style={{flex: 1, flexDirection: 'row'}}>\r\n            <button onClick={handleSelectStartingDate}>Start</button>\r\n            <button onClick={handleSelectEndingDate}>End</button>\r\n            <button onClick={handleSelectDateAuto}>Choose for me</button>\r\n\r\n            {state.selectedDate.stage === 'finished' && <button onClick={handleConfirmDate}>Confirm</button>}\r\n          </div>\r\n          <div>\r\n            <h3>\r\n              Starting date : {`${weekday[state.selectedDate.startingDate?.getDay()]}\r\n              ${month[state.selectedDate.startingDate?.getMonth()]}\r\n              ${state.selectedDate.startingDate?.getDate()}`}\r\n            </h3>\r\n            <h3>\r\n              Ending date : {`${weekday[state.selectedDate?.endingDate?.getDay()]}\r\n              ${month[state.selectedDate?.endingDate?.getMonth()]}\r\n              ${state.selectedDate?.endingDate?.getDate()}`}\r\n            </h3>\r\n          </div>\r\n       <span>Calories (leave blank for Oxford) :<input type='text' placeholder={objectives.calories} onChange={handleCalorieObjective}/></span><br/>\r\n       <span>Weight (leave blank for keeping current weight) :<input type='text' placeholder={objectives.weight} onChange={handleWeightObjective}/></span><br/>\r\n      <div style={{textAlign: 'left'}}>\r\n        <span>Recommended : </span><br/>\r\n      </div>\r\n      <div style={{textAlign: 'right'}}>\r\n        <span>Benedict and Harris:<b> {parseInt(GetCalories('Benedict'))}</b></span><br/>\r\n        <span>Oxford: <b>{parseInt(GetCalories('Oxford'))}</b></span>\r\n      </div>\r\n      <span>\r\n        <button onClick={handleDispatchObjectives}>Submit objectives</button>\r\n      </span>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Objectives;","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Provider\\Store.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\ObjectivesScheduler.jsx",["95","96","97","98","99","100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":22,"nodeType":"111","messageId":"112","endLine":1,"endColumn":31},{"ruleId":"109","severity":1,"message":"113","line":12,"column":18,"nodeType":"111","messageId":"112","endLine":12,"endColumn":26},{"ruleId":"109","severity":1,"message":"114","line":13,"column":12,"nodeType":"111","messageId":"112","endLine":13,"endColumn":16},{"ruleId":"109","severity":1,"message":"115","line":16,"column":9,"nodeType":"111","messageId":"112","endLine":16,"endColumn":25},{"ruleId":"109","severity":1,"message":"116","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":22},{"ruleId":"109","severity":1,"message":"117","line":8,"column":11,"nodeType":"111","messageId":"112","endLine":8,"endColumn":16},{"ruleId":"109","severity":1,"message":"118","line":32,"column":10,"nodeType":"111","messageId":"112","endLine":32,"endColumn":22},{"ruleId":"109","severity":1,"message":"117","line":7,"column":10,"nodeType":"111","messageId":"112","endLine":7,"endColumn":15},{"ruleId":"109","severity":1,"message":"113","line":5,"column":17,"nodeType":"111","messageId":"112","endLine":5,"endColumn":25},{"ruleId":"109","severity":1,"message":"119","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":15},{"ruleId":"109","severity":1,"message":"120","line":1,"column":40,"nodeType":"111","messageId":"112","endLine":1,"endColumn":50},{"ruleId":"109","severity":1,"message":"121","line":78,"column":9,"nodeType":"111","messageId":"112","endLine":78,"endColumn":23},{"ruleId":"109","severity":1,"message":"122","line":48,"column":13,"nodeType":"111","messageId":"112","endLine":48,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":48,"column":33,"nodeType":"111","endLine":48,"endColumn":34},{"ruleId":"109","severity":1,"message":"125","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":22},{"ruleId":"109","severity":1,"message":"126","line":35,"column":9,"nodeType":"111","messageId":"112","endLine":35,"endColumn":35},{"ruleId":"109","severity":1,"message":"110","line":1,"column":29,"nodeType":"111","messageId":"112","endLine":1,"endColumn":38},{"ruleId":"109","severity":1,"message":"120","line":1,"column":40,"nodeType":"111","messageId":"112","endLine":1,"endColumn":50},{"ruleId":"109","severity":1,"message":"127","line":13,"column":10,"nodeType":"111","messageId":"112","endLine":13,"endColumn":17},{"ruleId":"109","severity":1,"message":"128","line":13,"column":19,"nodeType":"111","messageId":"112","endLine":13,"endColumn":29},{"ruleId":"109","severity":1,"message":"129","line":14,"column":10,"nodeType":"111","messageId":"112","endLine":14,"endColumn":21},{"ruleId":"109","severity":1,"message":"130","line":14,"column":23,"nodeType":"111","messageId":"112","endLine":14,"endColumn":37},{"ruleId":"109","severity":1,"message":"131","line":16,"column":10,"nodeType":"111","messageId":"112","endLine":16,"endColumn":26},{"ruleId":"109","severity":1,"message":"132","line":16,"column":28,"nodeType":"111","messageId":"112","endLine":16,"endColumn":47},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'auth' is assigned a value but never used.","'AnonymousContent' is assigned a value but never used.","'AsyncStorage' is defined but never used.","'state' is assigned a value but never used.","'createRecipe' is assigned a value but never used.","'isNum' is defined but never used.","'useReducer' is defined but never used.","'HandleClickDay' is assigned a value but never used.","'firstMealOfTheDay' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'firstMealOfTheDay' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'DisplayInput' is defined but never used.","'handleDispatchMeasurements' is assigned a value but never used.","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","'selectedDay' is assigned a value but never used.","'setSelectedDay' is assigned a value but never used.","'nutrimentBalance' is assigned a value but never used.","'setNutrimentBalance' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]