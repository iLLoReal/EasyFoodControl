[{"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Reducer\\Reducer.constants.jsx":"2","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Reducer\\Reducer.jsx":"3","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Display\\AddMeal.jsx":"4","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Navigation\\Nav.jsx":"5","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\App.js":"6","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Home.jsx":"7","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Auth\\Login.js":"8","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Auth\\Register.js":"9","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Profile\\Profile.jsx":"10","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Recipes.jsx":"11","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\FoodScheduler.jsx":"12","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\Day.jsx":"13","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\Objectives.jsx":"14","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Provider\\Store.jsx":"15","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\ObjectivesScheduler.jsx":"16","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\ObjectivesChart.jsx":"17"},{"size":589,"mtime":1612780259311,"results":"18","hashOfConfig":"19"},{"size":399,"mtime":1615872027385,"results":"20","hashOfConfig":"19"},{"size":1255,"mtime":1615872025981,"results":"21","hashOfConfig":"19"},{"size":253,"mtime":1612779786838,"results":"22","hashOfConfig":"19"},{"size":4557,"mtime":1615870858037,"results":"23","hashOfConfig":"19"},{"size":213,"mtime":1613408253970,"results":"24","hashOfConfig":"19"},{"size":169,"mtime":1615872224204,"results":"25","hashOfConfig":"19"},{"size":6038,"mtime":1615894458891,"results":"26","hashOfConfig":"19"},{"size":2496,"mtime":1615871967968,"results":"27","hashOfConfig":"19"},{"size":3003,"mtime":1615872029843,"results":"28","hashOfConfig":"19"},{"size":12712,"mtime":1615872024684,"results":"29","hashOfConfig":"19"},{"size":2530,"mtime":1615872076958,"results":"30","hashOfConfig":"19"},{"size":7247,"mtime":1615871315196,"results":"31","hashOfConfig":"19"},{"size":9832,"mtime":1615871650827,"results":"32","hashOfConfig":"19"},{"size":777,"mtime":1615872028586,"results":"33","hashOfConfig":"19"},{"size":9835,"mtime":1615872191327,"results":"34","hashOfConfig":"19"},{"size":4876,"mtime":1615871767718,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1qkesq7",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\index.js",[],["73","74"],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Reducer\\Reducer.constants.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Reducer\\Reducer.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Display\\AddMeal.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Navigation\\Nav.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Home.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Auth\\Login.js",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Auth\\Register.js",["75"],"import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Context } from '../State/Provider/Store';\r\nimport * as actions from '../State/Reducer/Reducer.constants';\r\n\r\nconst Register = () => {\r\n  const [state, dispatch] = useContext(Context);\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  let history = useHistory();\r\n  const registerRoute = 'http://localhost:3000/register';\r\n\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value.toString());\r\n  };\r\n\r\n  const handleUsername = (e) => {\r\n    setUsername(e.target.value.toString());\r\n  };\r\n\r\n  const handleEmail = (e) => {\r\n    setEmail(e.target.value.toString());\r\n  }\r\n\r\n  function validateEmail(email) {\r\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return regex.test(String(email).toLowerCase());\r\n}\r\n\r\n  const confirm = async () => {\r\n    if (!username || !password || !email || !validateEmail(email))\r\n      return;\r\n    try {\r\n         const result = await axios.post(\r\n          registerRoute,\r\n            {\r\n               login: username,\r\n               password: password,\r\n               email: email,\r\n            });\r\n         const auth = {token: result.data.token};\r\n         dispatch({type: actions.REGISTER, payload: auth})\r\n         history.push('/');\r\n      }\r\n      catch(error) {\r\n          console.log(error);\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div style={{textAlign: 'left'}}>\r\n          <label>Username : </label>\r\n          <input type='text' placeholder='User name' onChange={handleUsername}/>\r\n        </div>\r\n        <div style={{textAlign: 'left'}}>\r\n          <label>Email : </label>\r\n          <input type='text' placeholder='Email' onChange={handleEmail}/>\r\n        </div>\r\n        <div style={{textAlign: 'left'}}>\r\n          <label>Password : </label>\r\n          <input type='password' placeholder='Password' onChange={handlePassword}/>\r\n        </div>\r\n        {email.length && !validateEmail(email) && (\r\n        <div style={{border: \"1px solid black\", color: 'red', textAlign: 'center', backgroundColor: 'black'}}>Invalid email format</div>)}\r\n      </form>\r\n      <button onClick={confirm}>confirm</button>\r\n   </div>\r\n  )\r\n};\r\n\r\nexport default Register;","C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Profile\\Profile.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Recipes.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\FoodScheduler.jsx",["76"],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\Day.jsx",["77","78"],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\Objectives.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\State\\Provider\\Store.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\ObjectivesScheduler.jsx",[],"C:\\Users\\PC\\Desktop\\dev\\EPITECH\\Epitech projects\\recent\\Projet libre\\Easy Food Controller\\EasyFoodControl\\src\\Components\\Calendar\\ObjectivesChart.jsx",["79","80","81"],"import React, { useState, useMemo, useEffect, useContext } from 'react'\r\n\r\nimport { Chart } from 'react-charts'\r\nimport { Context } from '../State/Provider/Store';\r\n\r\nconst ObjectivesChart = () => {\r\n  const [state, dispatch] = useContext(Context);\r\n  const [caloriesData, setCaloriesData] = useState()\r\n  const [nutrimentsData, setNutrimentsData] = useState()\r\n\r\n  const copyMatrix = (ref) => {\r\n    let result = [];\r\n    for (let i = 0; i < ref.length; i++) {\r\n      result.push([...ref[i]]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  const stateToResult = useMemo(() => {\r\n    \r\n    const handleSetCalories = () => {\r\n\r\n      let newData = [...state.result['balanceJourney']];\r\n      let data = newData.map((result) => [new Date(result['date']).getDate(), result['totalCalorie']]);\r\n\r\n      let objectives = copyMatrix(data);\r\n      for (let i = 0; i < objectives.length; i++) {\r\n        objectives[i][1] = state.objectives.calories;\r\n      }\r\n      objectives.sort((a, b) => a[0] - b[0]);\r\n      data.sort((a, b) => a[0] - b[0]);\r\n      setCaloriesData([{label: 'Calories', data: [[0, 0], ...data]} , {label: 'Goal', data: [...objectives]}]);\r\n    }\r\n    const handleSetNutriments = () => {\r\n      let newData = [...state.result['balanceJourney']];\r\n      let dataLipids = newData.map((result) => [new Date(result['date']).getDate(), result['lipids']]);\r\n      let dataCarbs = newData.map((result) => [new Date(result['date']).getDate(), result['carbs']]);\r\n      let dataProteins = newData.map((result) => [new Date(result['date']).getDate(), result['proteins']]);\r\n\r\n      let objectivesLipids = copyMatrix(dataLipids);\r\n      let objectivesCarbs = copyMatrix(dataCarbs);\r\n      let objectivesProteins = copyMatrix(dataProteins);\r\n      for (let i = 0; i < objectivesLipids.length; i++) {\r\n        objectivesLipids[i][1] = 35;\r\n        objectivesCarbs[i][1] = 50;\r\n        objectivesProteins[i][1] = 15;\r\n      }\r\n      objectivesLipids.sort((a, b) => a[0] - b[0]);\r\n      objectivesCarbs.sort((a, b) => a[0] - b[0]);\r\n      objectivesProteins.sort((a, b) => a[0] - b[0]);\r\n      dataLipids.sort((a, b) => a[0] - b[0]);\r\n      dataCarbs.sort((a, b) => a[0] - b[0]);\r\n      dataProteins.sort((a, b) => a[0] - b[0]);\r\n      setNutrimentsData([\r\n        {label: 'Lipids', data: [[0, 0], ...dataLipids]} , {label: 'LipidsGoal', data: [[0, 0], ...objectivesLipids]},\r\n        {label: 'Carbs', data: [[0, 0], ...dataCarbs]} , {label: 'CarbsGoal', data: [[0, 0], ...objectivesCarbs]},\r\n        {label: 'Proteins', data: [[0, 0], ...dataProteins]} , {label: 'ProteinsGoal', data: [[0, 0], ...objectivesProteins]},\r\n      ]);\r\n    }\r\n    handleSetCalories();\r\n    handleSetNutriments();\r\n  }, [state]);\r\n\r\n  const dataCalories = useMemo(\r\n  () => caloriesData ? [\r\n    {\r\n      label: caloriesData[0].label,\r\n      data: caloriesData[0].data\r\n    },\r\n    {\r\n      label: caloriesData[1].label,\r\n      data: caloriesData[1].data\r\n    }\r\n  ] : [{label: 'none', data: [[0,0]]}],\r\n  [caloriesData]\r\n)\r\nconst dataNutriments = useMemo(\r\n  () => nutrimentsData ? [\r\n    {\r\n      label: nutrimentsData[0].label,\r\n      data: nutrimentsData[0].data\r\n    },\r\n    {\r\n      label: nutrimentsData[1].label,\r\n      data: nutrimentsData[1].data\r\n    },\r\n    {\r\n      label: nutrimentsData[2].label,\r\n      data: nutrimentsData[2].data\r\n    },\r\n    {\r\n      label: nutrimentsData[3].label,\r\n      data: nutrimentsData[3].data\r\n    },\r\n    {\r\n      label: nutrimentsData[4].label,\r\n      data: nutrimentsData[4].data\r\n    },\r\n    {\r\n      label: nutrimentsData[5].label,\r\n      data: nutrimentsData[5].data\r\n    },\r\n  ] : [{label: 'none', data: [[0,0]]}],\r\n  [nutrimentsData]\r\n)\r\n\r\n  const series = useMemo(\r\n    () => ({\r\n      type: 'bar'\r\n    }),\r\n    []\r\n  )\r\n\r\n  const axes = useMemo(\r\n    () => [\r\n      { primary: true, type: 'ordinal', position: 'bottom' },\r\n      { position: 'left', type: 'linear', stacked: false }\r\n    ],\r\n    []\r\n  )\r\n\r\n  return (\r\n    <div style={{justifyContent: 'center'}}>\r\n      {(\r\n    <div\r\n      style={{\r\n        width: '400px',\r\n        height: '300px'\r\n      }}\r\n    >\r\n      Calories : Result is <span style={{color: 'rgb(74, 181, 235)'}}>blue</span>, Goal is <span style={{color: 'rgb(252, 104, 104)'}}>red</span>\r\n      <Chart data={dataCalories} series={series} axes={axes} />\r\n      Nutriments : Result is \r\n      <span style={{color: 'rgb(74, 181, 235)'}}> blue </span>, \r\n      <span style={{color: 'rgb(222, 207, 63)'}}> yellow </span>, \r\n      <span style={{color: 'rgb(250, 164, 58)'}}> orange </span>, Goal is \r\n      <span style={{color: 'rgb(252, 104, 104)'}}> red </span>, \r\n      <span style={{color: 'rgb(96, 189, 104)'}}> green </span>, \r\n      <span style={{color: 'rgb(198, 59, 137)'}}> purple </span>\r\n      <Chart data={dataNutriments} series={series} axes={axes} />\r\n    </div>\r\n  )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ObjectivesChart;",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":8,"column":10,"nodeType":"88","messageId":"89","endLine":8,"endColumn":15},{"ruleId":"86","severity":1,"message":"90","line":13,"column":10,"nodeType":"88","messageId":"89","endLine":13,"endColumn":21},{"ruleId":"86","severity":1,"message":"91","line":49,"column":13,"nodeType":"88","messageId":"89","endLine":49,"endColumn":30},{"ruleId":"92","severity":1,"message":"93","line":49,"column":33,"nodeType":"88","endLine":49,"endColumn":34},{"ruleId":"86","severity":1,"message":"94","line":1,"column":36,"nodeType":"88","messageId":"89","endLine":1,"endColumn":45},{"ruleId":"86","severity":1,"message":"95","line":7,"column":17,"nodeType":"88","messageId":"89","endLine":7,"endColumn":25},{"ruleId":"86","severity":1,"message":"96","line":19,"column":9,"nodeType":"88","messageId":"89","endLine":19,"endColumn":22},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","'selectedDay' is assigned a value but never used.","'firstMealOfTheDay' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'firstMealOfTheDay' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","'stateToResult' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]